<%
# Input parameters
drones              = @settings["drones"]
simulation_config   = @settings["simulation_config"]
rviz_config         = @settings["rviz_config"]

# Other parameters
use_sim_time                = true
estimator_plugin            = "ground_truth"
motion_controller_plugin    = "pid_speed_controller"
simulation                  = "false"

if estimator_plugin == "mocap_pose"
    state_estimator_config_file = "real_config/state_estimator_mocap.yaml"
elsif estimator_plugin == "raw_odometry"
    state_estimator_config_file = "sim_config/state_estimator_odom.yaml"
elsif estimator_plugin == "ground_truth"
    state_estimator_config_file = "sim_config/state_estimator_ground_truth.yaml"
end

%>
name: aerostack2
attach: false
root: ./
pre_window: humble; clear
windows:
    - gazebo:
        layout:
        panes:
            - ros2 launch as2_ign_gazebo_assets spawn.launch.py
                use_sim_time:=true
                simulation_config_file:=<%= simulation_config %>
            - rviz2 -d <%= rviz_config %>
    - visualization:
        layout: even-vertical
        panes:
            <%- drones.split(':').each do |drone| %>
            - ros2 launch as2_visualization as2_visualization.launch.py
                namespace:=<%= drone %>
                use_sim_time:=true
                rviz:=false
                paint_markers:=false
            <%- end %>
    - alphanumeric_viewer:
        layout: even-vertical
        panes:
            <%- drones.split(':').each do |drone| %>
            - ros2 run as2_alphanumeric_viewer as2_alphanumeric_viewer_node
                --ros-args -r  __ns:=/<%= drone %>
            <%- end %>
    - platform:
        layout: even-vertical
        panes:
            <%- drones.split(':').each do |drone| %>
            - ros2 launch as2_platform_ign_gazebo ign_gazebo_launch.py
                namespace:=<%= drone %>
                use_sim_time:=true
                simulation_config_file:=<%= simulation_config %>
                platform_config_file:=sim_config/platform_config_file.yaml
            <%- end %>
    - state_estimator:
        layout: even-vertical
        panes:
            <%- drones.split(':').each do |drone| %>
            - ros2 launch as2_state_estimator state_estimator_launch.py
                namespace:=<%= drone %>
                use_sim_time:=true
                plugin_name:=ground_truth
                plugin_config_file:=sim_config/state_estimator_config_file.yaml
            <%- end %>
    - controller:
        layout: even-vertical
        panes:
            <%- drones.split(':').each do |drone| %>
            - ros2 launch as2_motion_controller controller_launch.py
                namespace:=<%= drone %>
                use_sim_time:=true
                motion_controller_config_file:=sim_config/motion_controller.yaml
                plugin_name:=pid_speed_controller
                plugin_config_file:=sim_config/motion_controller_plugin.yaml
            <%- end %>
    - behaviors:
        layout: even-vertical
        panes:
            <%- drones.split(':').each do |drone| %>
            - ros2 launch as2_behaviors_motion composable_motion_behaviors.launch.py
                namespace:=<%= drone %>
                use_sim_time:=true
                follow_path_plugin_name:=follow_path_plugin_trajectory
                go_to_plugin_name:=go_to_plugin_position
                takeoff_plugin_name:=takeoff_plugin_position
                land_plugin_name:=land_plugin_speed
            - ros2 launch as2_behaviors_trajectory_generation composable_generate_polynomial_trajectory_behavior.launch.py
                container:=behaviors
                namespace:=<%= drone %>
                use_sim_time:=true && exit
            <%- end %>
    - exploration_server:
        layout: even-vertical
        panes:
            - ros2 launch as2_path_planning map_server.launch.py
                namespace:=map_server
                use_sim_time:=true
                config_file:=sim_config/exploration.yaml
            - ros2 launch as2_path_planning frontier_allocator.launch.py
                use_sim_time:=true
                config_file:=sim_config/exploration.yaml
            - ros2 launch as2_path_planning safeguard.launch.py
                use_sim_time:=true
                config_file:=sim_config/exploration.yaml
    <%- drones.split(':').each do |drone| %>
    - explorer_<%= drone %>:
        layout: even-vertical
        panes:
            - ros2 launch as2_path_planning laserscan_to_occupancy_grid.launch.py
                namespace:=<%= drone %>
                use_sim_time:=true
                output_topic:=/map_server/input_occupancy_grid
                config_file:=sim_config/exploration.yaml
            - ros2 launch as2_path_planning path_planner.launch.py
                namespace:=<%= drone %>
                use_sim_time:=true
                config_file:=sim_config/exploration.yaml
            - ros2 launch as2_path_planning explorer.launch.py
                namespace:=<%= drone %>
                use_sim_time:=true
                config_file:=sim_config/exploration.yaml
    <%- end %>
    - evaluator:
        panes:
            - python scripts/evaluate.py -s
            -